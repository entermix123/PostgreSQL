PostgreSQL - DB
PGAdmin - DB Browser
DataGrip - DB Browser for all DBs

Install Docker --> https://www.docker.com/

Install PostgreSQL:

terminal --> docker run -p 5432:5432 -e POSTGRES_USER=postgres-user -e POSTGRES_PASSWORD=password -d -v my-postgres-data:/var/lib/postgresql/data --name custom-name postgres:latest


Install PgAdmin:

terminal --> docker run -p 5050:80 -e PGADMIN_DEFAULT_EMAIL=some@email.com -e PGADMIN_DEFAULT_PASSWORD=password -v my-data:/var/lib/pgadmin -d dpage/pgadmin4


SQL Logical Divisions:

DDL(data definition language) - create, alter, drop, trunkate
DML(data manipulation language) - select, insert, update, delete
DCL(data control language) - grant, revoke, deny
TCL(transaction control language) - begin tran, commit, rollback, save

DDL:
CREATE - create table
ALTER - change table
DROP - erase table
TRUNKATE - delete all data in the table wxcept the table

DML:
SELECT - gather data from table
INSERT - insert data in table
UPDATE - change data in table
DELETE - delete data in table

DCL:
GRANT - give rights to user
REVOKE - remove rights from user
DENY - restrict user rights

TCL:
BEGIN TRAN - start changes
COMMIT - confirm changes
ROLLBACK - revert changes
SAVE - save changes



Create DATABASE:

1. Right click on default database - postgres and choose Query Tool
2. CREATE DATABASE db_name;
3. Execute or F5


Create tables:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
CREATE TABLE employees(
	id serial PRIMARY KEY Not NULL,
	first_name VARCHAR(30),
	last_name VARCHAR(50),
	hiring_date DATE Default('2023-01-01'),
	salary NUMERIC (10,2),
	devices_number INTEGER
	);

CREATE TABLE departments(
	id serial PRIMARY KEY Not NULL,
	"name" VARCHAR(50),
	code CHAR(3),
	description TEXT
	);
	
CREATE TABLE issues(
	id serial PRIMARY KEY UNIQUE,
	description VARCHAR(150),
	date DATE,
	start TIMESTAMP WITHOUT TIME ZONE
	);
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Change tables:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
ALTER TABLE employees
ADD middle_name VARCHAR(50)
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Rename tables:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
ALTER TABLE table_name
RENAME TO new_table_name;
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Add constraints to table fields:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
ALTER TABLE table_name
ALTER COLUMN salary SET Not NULL,
ALTER COLUMN salary SET Default(0),
ALTER COLUMN hiring_date SET Not NULL;
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Modify Columns:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
ALTER TABLE table_name
ALTER COLUMN middle_name TYPE VARCHAR(100);
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Truncate table:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
TRUNCATE TABLE table_name;
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Drop table:

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
DROP TABLE table_name;
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Create table, Insert data and visualize the data:


1. Connect to Database and open Query Tool
------------------------------------------------------------------------
CREATE TABLE people(
	first_name VARCHAR(20)
	,last_name VARCHAR(20)
	);
	
INSERT INTO people
VALUES
	('Koko', 'Dimov')
	,('Spiridon', 'Chomakov');
	
SELECT * FROM people
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables



Create table, Insert data and visualize the data with autogenerated id. 	# IMPORTANT

1. Connect to Database and open Query Tool
------------------------------------------------------------------------
CREATE TABLE people(
	id int PRIMARY KEY generated always as identity
	,first_name VARCHAR(20)
	,last_name VARCHAR(20)
	);
	
INSERT INTO people(first_name, last_name)
VALUES
	('Koko', 'Dimov')
	,('Spiridon', 'Chomakov');
	
SELECT * FROM people
------------------------------------------------------------------------
2. Execute or F5
3. Refresh Schemas/Tables







