
Table of content:

1. Functions in PostgreSQL
2. String Functions
3. Math Functions
4. Date/Time Functions
5. Wildcards

-------
FROM tables menu/create script - we can take the query for creation of the table
-------

FUNCTIONS IN POSTGRES:
▪ String Functions – manipulating text
▪ e.g., concatenate column values
▪ Math Functions – calculations and working with aggregate data
▪ e.g., perform geometric and currency operations
▪ Date/Time Functions
▪ e.g., compute the length of a time span
▪ A great variety of Other Functions
▪ have a look at the official documentation


==================
STRING FUNCTIONS:
==================

SELECT CONCAT(first_name,' ',last_name) AS full_name
FROM authors;

SELECT CONCAT_WS(', ', last_name, born) AS summary
FROM authors;

SUBSTRING(string, start_position, length)

SELECT SUBSTRING('SoftUni', 5, 3) --> Uni

SELECT
CONCAT(SUBSTRING(first_name FROM 1 FOR 1), '.', ' ', last_name) AS full_name
FROM authors;


SELECT title FROM books
WHERE SUBSTRING(title, 1, 3) = 'The'
ORDER BY id;


▪ Example: short titles (first 10 letters)

SELECT id, year_of_release,
	LEFT(title, 10) AS short_title
FROM books;


▪ Performs a case-sensitive matching

REPLACE(string, pattern, replacement)

REPLACE('SoftUni', 'Soft', 'Hard')	--> 	HardUni

▪ Example: censor the word 'Murder' from book titles

SELECT REPLACE(title, 'Murder', '******')
AS title_censored
FROM books;

SELECT REPLACE(title, 'The','***') AS "Title"
FROM books
WHERE SUBSTRING(title, 1, 3) = 'The'
ORDER BY id;

▪ Change letter casing
LOWER(string)
UPPER(string)

▪ Reverse order of all characters in a string
REVERSE(string)

▪ Repeat string
REPEAT(string, count)

▪ Remove spaces/chars from both sides of a string
SELECT TRIM(string)
SELECT TRIM(BOTH ' ' FROM ' Uni ' )

▪ Remove spaces/chars from the left side of a string
SELECT TRIM(LEADING FROM string)

▪ Remove spaces/chars from the right side of a string
SELECT TRIM(TRAILING FROM string)

THE TRIM REMOVE ALL EXISTING CHARACTERS!!! IT STOPS WHEN FIND NO MORE CHARACTERS IN SET PATTERN! See video 

▪ How to replace characters in string
SELECT TRANSLATE('121312144', '123', 'alb')	-->	 alabala44

▪ How to check start position of some string in text
SELECT POSITION('moia' IN 'mila moia maino lio')	-->	6

▪ How to separate text from field	
SELECT full_name, 
	left(full_name, position(' ' IN full_name)) AS firs_name,
	-- take all simbols from left side to ' ' (space).
	right(full_name, length(full_name) - position(' ' in full_name)) AS last_name
	-- take all simbols from right side to ' ' (space).
	SUBSTRING(full_name, 1, position(' ' in first_name)) AS first_name,
	SUBSTRING(full_name, position(' ' in first_name), length(full_name) AS first_name
FROM table_name


==================
MATH FUNCTIONS:
==================

Operator      / Function Description

- 		Subtraction
+ 		Addition
* 		Multiplication
/ 		Division
%, MOD(a, b) 	Modulo
^, POWER(a, b) 	Exponentiation
|/, SQRT(a) 	Square root
@, ABS(a) 	Absolute value

▪ Get the value of Pi (15-digit precision)
SELECT PI(); #3.141592653589793

▪ Get the result from an integer division
SELECT DIV(11, 2); #5

SELECT |/9 	-->	3
SELECT SQRT(9)	--> 	3

SELECT @ -9 	-->	9	--absolute value


▪ FLOOR & CEILING – return the nearest integer
FLOOR(value)
SELECT FLOOR(33.68); #33

CEILING(value)
SELECT CEILING(33.68); #34


==================
DATE/TIME FUNCTIONS:
==================

▪ Write a query to show the author’s year of birth
	▪ Use EXTRACT
	▪ Query table authors

SELECT first_name, last_name,
EXTRACT(year FROM born) AS year
FROM authors;

SELECT 
	EXTRACT('year' FROM now()) AS Year, 
	EXTRACT('month' FROM now()) AS Month,
	EXTRACT('week' FROM now()) AS Week,
	EXTRACT('day' FROM now()) AS Day,
	EXTRACT('hour' FROM now()) AS Hour,
	EXTRACT('minutes' FROM now()) AS Minutes,
	EXTRACT('seconds' FROM now()) AS Seconds


SELECT age(now(), '2011-02-03')
SELECT now() + interval '3 hours'			--> give us current time + time zone
SELECT now() + interval '3 hours 22 minutes 11 seconds'	--> give us current time + added time
SELECT to_char(now(), 'YYYY')				--> give us year only
INFO: https://www.postgresqltutorial.com/postgresql-string-functions/postgresql-to_char/


SELECT 
	to_char(now(), 'YYYY') AS Year, 
	to_char(now(), 'Month') AS Month,
	to_char(now(), 'WW') AS Week_of_year,
	to_char(now(), 'W') AS Week_of_month,
	to_char(now(), 'DDD') AS day_of_year,
	to_char(now(), 'Day') AS day_of_week

SELECT CURRENT_DATE	--> 2023-09-19
SELECT CURRENT_TIME	--> 18:33:35.492523+00:00
SELECT NOW() 		--> 2023-09-19 18:34:07.686452+00


▪ NOW– obtains the current date and time, including time zone
SELECT NOW(); #2023-02-23 10:49:42.662178+02

▪ CURRENT_DATE and CURRENT_TIME
SELECT CURRENT_DATE; #2023-02-23
SELECT CURRENT_TIME; #10:55:17.495425+02:00

▪ TO_CHAR – formats the date value according to the format
SELECT TO_CHAR(NOW(), 'DD Month YYYY') AS "Date";	#23 February 2023


ADDITIONAL SCRIPT:
--------------------------------------------------------
DO $$
	DECLARE
	my_time_1 TIMESTAMP := '2020-01-02:12:22:44';
	my_time_2 TIMESTAMP := now();
	my_time_3 interval;
	BEGIN
		my_time_3 := age(my_time_2, my_time_1);
		raise notice 'The dofference is %', my_time_3;
END $$
--------------------------------------------------------


==================
WOLDCARD:
==================

▪ Used to substitute any other character(s) in a string
	▪ '%' - represents zero, one, or multiple characters
	▪ '_' - represents a single character
	▪ Can be used in combinations
▪ Used with LIKE operator in a WHERE clause
	▪ Similar to Regular Expressions

▪ Find any values that start with "S"
WHERE last_name LIKE 'S%';

▪ Find any values that have "o" in the second position
WHERE middle_name LIKE '_o%';

▪ Find any values that start with "A" and end with "a"
WHERE first_name LIKE 'A%a';

▪ ESCAPE – specify a prefix to treat special characters as normal

SELECT id, last_name
FROM authors
WHERE last_name LIKE '%l!_%' ESCAPE '!';



===============
PROBLEMS LAB:
===============

1. Find Book Titles - find all titles that start with 'The'
--------------------------------------
SELECT 
	title
FROM books
WHERE SUBSTRING(title, 1, 3) = 'The'
--WHRE title LIKE 'The%'
ORDER BY id
--------------------------------------


2. Replace Titles
--------------------------------------
SELECT 
	REPLACE(title, 'The', '***')
FROM books
WHERE 
	left(title, 3) = 'The'
ORDER BY id
--------------------------------------


3. Triangles on Bookshelves
--------------------------------------
SELECT 
	id,
	side * height / 2 AS area
FROM triangles
ORDER BY id
--------------------------------------


4. Format Costs		
HOW TO SET SPECIFIC NUMBER OF DIGITS AFTER SEPARATION COMMA: 
TRUNC(filed_name, number_after_comma) field, must be defined as double or real
--------------------------------------
SELECT
	title,
	TRUNC(cost, 3) AS modified_price
	--round(cost, 3) AS modified_price
FROM books
ORDER BY id
--------------------------------------


5. Year of Birth
EXTRACT YEAR FROM DATE
--------------------------------------
SELECT
	first_name,
	last_name,
	EXTRACT(year FROM born) AS year
FROM authors
--------------------------------------


6. Format Date of Birth
FORMAT DATE OF BIRTH
--------------------------------------
SELECT 
	last_name AS "Last Name",
	to_char(born, 'DD (Dy) Mon YYYY') AS "Date of Birth"
FROM authors;
--------------------------------------



CALCULATE LIFESPAN
--------------------------------------
SELECT
	CONCAT(first_name, ' ', last_name) AS full_name,
	coalesce(age(died, born)::varchar(30), concat('Alive: ', age(now(), born)::varchar(30))) AS lifespan
FROM 
	authors;
--------------------------------------


7. Harry Potter Books
SELECT FIELDS CONTAINING SPECIFIC TEXT
--------------------------------------
SELECT 
	title
FROM books
WHERE title LIKE 'Harry Potter%'
ORDER BY id
--------------------------------------


